Terminals unused in grammar

    '&'


State 126 conflicts: 1 shift/reduce
State 127 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: declaration ';'
    5          | assignment ';'
    6          | expression ';'
    7          | do_while_statement ';'
    8          | if_condition block_statement
    9          | if_condition block
   10          | if_condition block_statement else_statement
   11          | if_condition block else_statement
   12          | while_statement
   13          | for_statement
   14          | switch_statement
   15          | function
   16          | return_statement ';'
   17          | print_statement ';'
   18          | block

   19 return_statement: RETURN expression
   20                 | RETURN

   21 declaration: variable_declaration
   22            | enum_declaration

   23 variable_declaration: data_type IDENTIFIER
   24                     | data_type IDENTIFIER '=' expression
   25                     | CONSTANT data_type IDENTIFIER '=' expression

   26 enum_declaration: ENUM IDENTIFIER '{' enum_list '}'

   27 enum_list: enum_item
   28          | enum_list ',' enum_item

   29 enum_item: IDENTIFIER '=' INTEGER_TYPE
   30          | IDENTIFIER

   31 assignment: IDENTIFIER '=' expression

   32 expression: math_expression
   33           | logical_expression
   34           | '(' expression ')'
   35           | function_call

   36 math_expression: expression '+' term
   37                | expression '-' term
   38                | term

   39 term: term '*' factor
   40     | term '/' factor
   41     | term '%' factor
   42     | factor

   43 factor: value
   44       | IDENTIFIER

   45 value: INTEGER_TYPE
   46      | FLOAT_TYPE
   47      | BOOLEAN_TYPE
   48      | CHARACTER_TYPE
   49      | STRING_TYPE

   50 data_type: INT
   51          | FLOAT
   52          | BOOLEAN
   53          | CHARACTER
   54          | STRING

   55 logical_expression: '!' expression
   56                   | expression '<' expression
   57                   | expression '>' expression
   58                   | expression GREATER_THAN_OR_EQUAL expression
   59                   | expression LESS_THAN_OR_EQUAL expression
   60                   | expression AND expression
   61                   | expression OR expression
   62                   | expression EQUAL expression
   63                   | expression NOT_EQUAL expression

   64 while_statement: while_declaraction block
   65                | while_declaraction block_statement

   66 while_declaraction: WHILE '(' logical_expression ')'

   67 block: '{' block_statements '}'

   68 block_statements: block_statement
   69                 | block_statements block_statement

   70 block_statement: declaration ';'
   71                | assignment ';'
   72                | expression ';'
   73                | do_while_statement ';'
   74                | if_condition block_statement
   75                | if_condition block
   76                | if_condition block_statement else_statement
   77                | if_condition block else_statement
   78                | while_statement
   79                | for_statement
   80                | switch_statement
   81                | return_statement ';'
   82                | print_statement ';'
   83                | CONTINUE ';'
   84                | BREAK ';'

   85 print_statement: PRINT '(' argument_print ')'

   86 argument_print: argument_print ',' expression
   87               | expression

   88 for_statement: for_declaration block
   89              | for_declaration block_statement

   90 for_declaration: FOR '(' variable_declaration ';' logical_expression ';' expression ')'

   91 do_while_statement: DO block while_declaraction
   92                   | DO block_statement while_declaraction

   93 switch_statement: SWITCH '(' expression ')' '{' case_statement '}'

   94 case_statement: CASE value ':' block case_statement
   95               | DEFAULT ':' block

   96 arguments: arguments ',' argument
   97          | argument
   98          | %empty

   99 argument: data_type IDENTIFIER
  100         | data_type IDENTIFIER '=' expression

  101 function: VOID IDENTIFIER '(' arguments ')' block
  102         | data_type IDENTIFIER '(' arguments ')' block

  103 function_call: IDENTIFIER '(' argument_call ')'

  104 argument_call: argument_call ',' expression
  105              | expression
  106              | %empty

  107 if_condition: IF '(' logical_expression ')'

  108 else_statement: ELSE block
  109               | ELSE block_statement


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 55
    '%' (37) 41
    '&' (38)
    '(' (40) 34 66 85 90 93 101 102 103 107
    ')' (41) 34 66 85 90 93 101 102 103 107
    '*' (42) 39
    '+' (43) 36
    ',' (44) 28 86 96 104
    '-' (45) 37
    '/' (47) 40
    ':' (58) 94 95
    ';' (59) 4 5 6 7 16 17 70 71 72 73 81 82 83 84 90
    '<' (60) 56
    '=' (61) 24 25 29 31 100
    '>' (62) 57
    '{' (123) 26 67 93
    '}' (125) 26 67 93
    error (256)
    INTEGER_TYPE <integer_value> (258) 29 45
    FLOAT_TYPE <float_value> (259) 46
    CHARACTER_TYPE <char_value> (260) 48
    STRING_TYPE <string_value> (261) 49
    BOOLEAN_TYPE <boolean_value> (262) 47
    IDENTIFIER <identifier> (263) 23 24 25 26 29 30 31 44 99 100 101 102 103
    IF (264) 107
    ELSE (265) 108 109
    DO (266) 91 92
    WHILE (267) 66
    FOR (268) 90
    BREAK (269) 84
    CONTINUE (270) 83
    SWITCH (271) 93
    CASE (272) 94
    DEFAULT (273) 95
    CHARACTER (274) 53
    STRING (275) 54
    INT (276) 50
    FLOAT (277) 51
    BOOLEAN (278) 52
    CONSTANT (279) 25
    VOID (280) 101
    RETURN (281) 19 20
    ENUM (282) 26
    EQUAL (283) 62
    NOT_EQUAL (284) 63
    GREATER_THAN_OR_EQUAL (285) 58
    LESS_THAN_OR_EQUAL (286) 59
    AND (287) 60
    OR (288) 61
    PRINT (289) 85


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    program (53)
        on left: 1
        on right: 0
    statements (54)
        on left: 2 3
        on right: 1 3
    statement (55)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
        on right: 2 3
    return_statement (56)
        on left: 19 20
        on right: 16 81
    declaration (57)
        on left: 21 22
        on right: 4 70
    variable_declaration (58)
        on left: 23 24 25
        on right: 21 90
    enum_declaration (59)
        on left: 26
        on right: 22
    enum_list (60)
        on left: 27 28
        on right: 26 28
    enum_item (61)
        on left: 29 30
        on right: 27 28
    assignment (62)
        on left: 31
        on right: 5 71
    expression (63)
        on left: 32 33 34 35
        on right: 6 19 24 25 31 34 36 37 55 56 57 58 59 60 61 62 63 72 86 87 90 93 100 104 105
    math_expression (64)
        on left: 36 37 38
        on right: 32
    term (65)
        on left: 39 40 41 42
        on right: 36 37 38 39 40 41
    factor (66)
        on left: 43 44
        on right: 39 40 41 42
    value (67)
        on left: 45 46 47 48 49
        on right: 43 94
    data_type (68)
        on left: 50 51 52 53 54
        on right: 23 24 25 99 100 102
    logical_expression (69)
        on left: 55 56 57 58 59 60 61 62 63
        on right: 33 66 90 107
    while_statement (70)
        on left: 64 65
        on right: 12 78
    while_declaraction (71)
        on left: 66
        on right: 64 65 91 92
    block (72)
        on left: 67
        on right: 9 11 18 64 75 77 88 91 94 95 101 102 108
    block_statements (73)
        on left: 68 69
        on right: 67 69
    block_statement (74)
        on left: 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84
        on right: 8 10 65 68 69 74 76 89 92 109
    print_statement (75)
        on left: 85
        on right: 17 82
    argument_print (76)
        on left: 86 87
        on right: 85 86
    for_statement (77)
        on left: 88 89
        on right: 13 79
    for_declaration (78)
        on left: 90
        on right: 88 89
    do_while_statement (79)
        on left: 91 92
        on right: 7 73
    switch_statement (80)
        on left: 93
        on right: 14 80
    case_statement (81)
        on left: 94 95
        on right: 93 94
    arguments (82)
        on left: 96 97 98
        on right: 96 101 102
    argument (83)
        on left: 99 100
        on right: 96 97
    function (84)
        on left: 101 102
        on right: 15
    function_call (85)
        on left: 103
        on right: 35
    argument_call (86)
        on left: 104 105 106
        on right: 103 104
    if_condition (87)
        on left: 107
        on right: 8 9 10 11 74 75 76 77
    else_statement (88)
        on left: 108 109
        on right: 10 11 76 77


State 0

    0 $accept: . program $end
    1 program: . statements
    2 statements: . statement
    3           | . statements statement
    4 statement: . declaration ';'
    5          | . assignment ';'
    6          | . expression ';'
    7          | . do_while_statement ';'
    8          | . if_condition block_statement
    9          | . if_condition block
   10          | . if_condition block_statement else_statement
   11          | . if_condition block else_statement
   12          | . while_statement
   13          | . for_statement
   14          | . switch_statement
   15          | . function
   16          | . return_statement ';'
   17          | . print_statement ';'
   18          | . block
   19 return_statement: . RETURN expression
   20                 | . RETURN
   21 declaration: . variable_declaration
   22            | . enum_declaration
   23 variable_declaration: . data_type IDENTIFIER
   24                     | . data_type IDENTIFIER '=' expression
   25                     | . CONSTANT data_type IDENTIFIER '=' expression
   26 enum_declaration: . ENUM IDENTIFIER '{' enum_list '}'
   31 assignment: . IDENTIFIER '=' expression
   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   50 data_type: . INT
   51          | . FLOAT
   52          | . BOOLEAN
   53          | . CHARACTER
   54          | . STRING
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
   64 while_statement: . while_declaraction block
   65                | . while_declaraction block_statement
   66 while_declaraction: . WHILE '(' logical_expression ')'
   67 block: . '{' block_statements '}'
   85 print_statement: . PRINT '(' argument_print ')'
   88 for_statement: . for_declaration block
   89              | . for_declaration block_statement
   90 for_declaration: . FOR '(' variable_declaration ';' logical_expression ';' expression ')'
   91 do_while_statement: . DO block while_declaraction
   92                   | . DO block_statement while_declaraction
   93 switch_statement: . SWITCH '(' expression ')' '{' case_statement '}'
  101 function: . VOID IDENTIFIER '(' arguments ')' block
  102         | . data_type IDENTIFIER '(' arguments ')' block
  103 function_call: . IDENTIFIER '(' argument_call ')'
  107 if_condition: . IF '(' logical_expression ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    DO              shift, and go to state 8
    WHILE           shift, and go to state 9
    FOR             shift, and go to state 10
    SWITCH          shift, and go to state 11
    CHARACTER       shift, and go to state 12
    STRING          shift, and go to state 13
    INT             shift, and go to state 14
    FLOAT           shift, and go to state 15
    BOOLEAN         shift, and go to state 16
    CONSTANT        shift, and go to state 17
    VOID            shift, and go to state 18
    RETURN          shift, and go to state 19
    ENUM            shift, and go to state 20
    PRINT           shift, and go to state 21
    '!'             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    program               go to state 25
    statements            go to state 26
    statement             go to state 27
    return_statement      go to state 28
    declaration           go to state 29
    variable_declaration  go to state 30
    enum_declaration      go to state 31
    assignment            go to state 32
    expression            go to state 33
    math_expression       go to state 34
    term                  go to state 35
    factor                go to state 36
    value                 go to state 37
    data_type             go to state 38
    logical_expression    go to state 39
    while_statement       go to state 40
    while_declaraction    go to state 41
    block                 go to state 42
    print_statement       go to state 43
    for_statement         go to state 44
    for_declaration       go to state 45
    do_while_statement    go to state 46
    switch_statement      go to state 47
    function              go to state 48
    function_call         go to state 49
    if_condition          go to state 50


State 1

   45 value: INTEGER_TYPE .

    $default  reduce using rule 45 (value)


State 2

   46 value: FLOAT_TYPE .

    $default  reduce using rule 46 (value)


State 3

   48 value: CHARACTER_TYPE .

    $default  reduce using rule 48 (value)


State 4

   49 value: STRING_TYPE .

    $default  reduce using rule 49 (value)


State 5

   47 value: BOOLEAN_TYPE .

    $default  reduce using rule 47 (value)


State 6

   31 assignment: IDENTIFIER . '=' expression
   44 factor: IDENTIFIER .  [EQUAL, NOT_EQUAL, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, AND, OR, '<', '>', '+', '-', '*', '/', '%', ';']
  103 function_call: IDENTIFIER . '(' argument_call ')'

    '='  shift, and go to state 51
    '('  shift, and go to state 52

    $default  reduce using rule 44 (factor)


State 7

  107 if_condition: IF . '(' logical_expression ')'

    '('  shift, and go to state 53


State 8

   19 return_statement: . RETURN expression
   20                 | . RETURN
   21 declaration: . variable_declaration
   22            | . enum_declaration
   23 variable_declaration: . data_type IDENTIFIER
   24                     | . data_type IDENTIFIER '=' expression
   25                     | . CONSTANT data_type IDENTIFIER '=' expression
   26 enum_declaration: . ENUM IDENTIFIER '{' enum_list '}'
   31 assignment: . IDENTIFIER '=' expression
   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   50 data_type: . INT
   51          | . FLOAT
   52          | . BOOLEAN
   53          | . CHARACTER
   54          | . STRING
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
   64 while_statement: . while_declaraction block
   65                | . while_declaraction block_statement
   66 while_declaraction: . WHILE '(' logical_expression ')'
   67 block: . '{' block_statements '}'
   70 block_statement: . declaration ';'
   71                | . assignment ';'
   72                | . expression ';'
   73                | . do_while_statement ';'
   74                | . if_condition block_statement
   75                | . if_condition block
   76                | . if_condition block_statement else_statement
   77                | . if_condition block else_statement
   78                | . while_statement
   79                | . for_statement
   80                | . switch_statement
   81                | . return_statement ';'
   82                | . print_statement ';'
   83                | . CONTINUE ';'
   84                | . BREAK ';'
   85 print_statement: . PRINT '(' argument_print ')'
   88 for_statement: . for_declaration block
   89              | . for_declaration block_statement
   90 for_declaration: . FOR '(' variable_declaration ';' logical_expression ';' expression ')'
   91 do_while_statement: . DO block while_declaraction
   91                   | DO . block while_declaraction
   92                   | . DO block_statement while_declaraction
   92                   | DO . block_statement while_declaraction
   93 switch_statement: . SWITCH '(' expression ')' '{' case_statement '}'
  103 function_call: . IDENTIFIER '(' argument_call ')'
  107 if_condition: . IF '(' logical_expression ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    DO              shift, and go to state 8
    WHILE           shift, and go to state 9
    FOR             shift, and go to state 10
    BREAK           shift, and go to state 54
    CONTINUE        shift, and go to state 55
    SWITCH          shift, and go to state 11
    CHARACTER       shift, and go to state 12
    STRING          shift, and go to state 13
    INT             shift, and go to state 14
    FLOAT           shift, and go to state 15
    BOOLEAN         shift, and go to state 16
    CONSTANT        shift, and go to state 17
    RETURN          shift, and go to state 19
    ENUM            shift, and go to state 20
    PRINT           shift, and go to state 21
    '!'             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    return_statement      go to state 56
    declaration           go to state 57
    variable_declaration  go to state 30
    enum_declaration      go to state 31
    assignment            go to state 58
    expression            go to state 59
    math_expression       go to state 34
    term                  go to state 35
    factor                go to state 36
    value                 go to state 37
    data_type             go to state 60
    logical_expression    go to state 39
    while_statement       go to state 61
    while_declaraction    go to state 41
    block                 go to state 62
    block_statement       go to state 63
    print_statement       go to state 64
    for_statement         go to state 65
    for_declaration       go to state 45
    do_while_statement    go to state 66
    switch_statement      go to state 67
    function_call         go to state 49
    if_condition          go to state 68


State 9

   66 while_declaraction: WHILE . '(' logical_expression ')'

    '('  shift, and go to state 69


State 10

   90 for_declaration: FOR . '(' variable_declaration ';' logical_expression ';' expression ')'

    '('  shift, and go to state 70


State 11

   93 switch_statement: SWITCH . '(' expression ')' '{' case_statement '}'

    '('  shift, and go to state 71


State 12

   53 data_type: CHARACTER .

    $default  reduce using rule 53 (data_type)


State 13

   54 data_type: STRING .

    $default  reduce using rule 54 (data_type)


State 14

   50 data_type: INT .

    $default  reduce using rule 50 (data_type)


State 15

   51 data_type: FLOAT .

    $default  reduce using rule 51 (data_type)


State 16

   52 data_type: BOOLEAN .

    $default  reduce using rule 52 (data_type)


State 17

   25 variable_declaration: CONSTANT . data_type IDENTIFIER '=' expression
   50 data_type: . INT
   51          | . FLOAT
   52          | . BOOLEAN
   53          | . CHARACTER
   54          | . STRING

    CHARACTER  shift, and go to state 12
    STRING     shift, and go to state 13
    INT        shift, and go to state 14
    FLOAT      shift, and go to state 15
    BOOLEAN    shift, and go to state 16

    data_type  go to state 72


State 18

  101 function: VOID . IDENTIFIER '(' arguments ')' block

    IDENTIFIER  shift, and go to state 73


State 19

   19 return_statement: RETURN . expression
   20                 | RETURN .  [';']
   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    $default  reduce using rule 20 (return_statement)

    expression          go to state 75
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    function_call       go to state 49


State 20

   26 enum_declaration: ENUM . IDENTIFIER '{' enum_list '}'

    IDENTIFIER  shift, and go to state 76


State 21

   85 print_statement: PRINT . '(' argument_print ')'

    '('  shift, and go to state 77


State 22

   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   55                   | '!' . expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 78
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    function_call       go to state 49


State 23

   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   34           | '(' . expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 79
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    function_call       go to state 49


State 24

   19 return_statement: . RETURN expression
   20                 | . RETURN
   21 declaration: . variable_declaration
   22            | . enum_declaration
   23 variable_declaration: . data_type IDENTIFIER
   24                     | . data_type IDENTIFIER '=' expression
   25                     | . CONSTANT data_type IDENTIFIER '=' expression
   26 enum_declaration: . ENUM IDENTIFIER '{' enum_list '}'
   31 assignment: . IDENTIFIER '=' expression
   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   50 data_type: . INT
   51          | . FLOAT
   52          | . BOOLEAN
   53          | . CHARACTER
   54          | . STRING
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
   64 while_statement: . while_declaraction block
   65                | . while_declaraction block_statement
   66 while_declaraction: . WHILE '(' logical_expression ')'
   67 block: '{' . block_statements '}'
   68 block_statements: . block_statement
   69                 | . block_statements block_statement
   70 block_statement: . declaration ';'
   71                | . assignment ';'
   72                | . expression ';'
   73                | . do_while_statement ';'
   74                | . if_condition block_statement
   75                | . if_condition block
   76                | . if_condition block_statement else_statement
   77                | . if_condition block else_statement
   78                | . while_statement
   79                | . for_statement
   80                | . switch_statement
   81                | . return_statement ';'
   82                | . print_statement ';'
   83                | . CONTINUE ';'
   84                | . BREAK ';'
   85 print_statement: . PRINT '(' argument_print ')'
   88 for_statement: . for_declaration block
   89              | . for_declaration block_statement
   90 for_declaration: . FOR '(' variable_declaration ';' logical_expression ';' expression ')'
   91 do_while_statement: . DO block while_declaraction
   92                   | . DO block_statement while_declaraction
   93 switch_statement: . SWITCH '(' expression ')' '{' case_statement '}'
  103 function_call: . IDENTIFIER '(' argument_call ')'
  107 if_condition: . IF '(' logical_expression ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    DO              shift, and go to state 8
    WHILE           shift, and go to state 9
    FOR             shift, and go to state 10
    BREAK           shift, and go to state 54
    CONTINUE        shift, and go to state 55
    SWITCH          shift, and go to state 11
    CHARACTER       shift, and go to state 12
    STRING          shift, and go to state 13
    INT             shift, and go to state 14
    FLOAT           shift, and go to state 15
    BOOLEAN         shift, and go to state 16
    CONSTANT        shift, and go to state 17
    RETURN          shift, and go to state 19
    ENUM            shift, and go to state 20
    PRINT           shift, and go to state 21
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    return_statement      go to state 56
    declaration           go to state 57
    variable_declaration  go to state 30
    enum_declaration      go to state 31
    assignment            go to state 58
    expression            go to state 59
    math_expression       go to state 34
    term                  go to state 35
    factor                go to state 36
    value                 go to state 37
    data_type             go to state 60
    logical_expression    go to state 39
    while_statement       go to state 61
    while_declaraction    go to state 41
    block_statements      go to state 80
    block_statement       go to state 81
    print_statement       go to state 64
    for_statement         go to state 65
    for_declaration       go to state 45
    do_while_statement    go to state 66
    switch_statement      go to state 67
    function_call         go to state 49
    if_condition          go to state 68


State 25

    0 $accept: program . $end

    $end  shift, and go to state 82


State 26

    1 program: statements .  [$end]
    3 statements: statements . statement
    4 statement: . declaration ';'
    5          | . assignment ';'
    6          | . expression ';'
    7          | . do_while_statement ';'
    8          | . if_condition block_statement
    9          | . if_condition block
   10          | . if_condition block_statement else_statement
   11          | . if_condition block else_statement
   12          | . while_statement
   13          | . for_statement
   14          | . switch_statement
   15          | . function
   16          | . return_statement ';'
   17          | . print_statement ';'
   18          | . block
   19 return_statement: . RETURN expression
   20                 | . RETURN
   21 declaration: . variable_declaration
   22            | . enum_declaration
   23 variable_declaration: . data_type IDENTIFIER
   24                     | . data_type IDENTIFIER '=' expression
   25                     | . CONSTANT data_type IDENTIFIER '=' expression
   26 enum_declaration: . ENUM IDENTIFIER '{' enum_list '}'
   31 assignment: . IDENTIFIER '=' expression
   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   50 data_type: . INT
   51          | . FLOAT
   52          | . BOOLEAN
   53          | . CHARACTER
   54          | . STRING
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
   64 while_statement: . while_declaraction block
   65                | . while_declaraction block_statement
   66 while_declaraction: . WHILE '(' logical_expression ')'
   67 block: . '{' block_statements '}'
   85 print_statement: . PRINT '(' argument_print ')'
   88 for_statement: . for_declaration block
   89              | . for_declaration block_statement
   90 for_declaration: . FOR '(' variable_declaration ';' logical_expression ';' expression ')'
   91 do_while_statement: . DO block while_declaraction
   92                   | . DO block_statement while_declaraction
   93 switch_statement: . SWITCH '(' expression ')' '{' case_statement '}'
  101 function: . VOID IDENTIFIER '(' arguments ')' block
  102         | . data_type IDENTIFIER '(' arguments ')' block
  103 function_call: . IDENTIFIER '(' argument_call ')'
  107 if_condition: . IF '(' logical_expression ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    DO              shift, and go to state 8
    WHILE           shift, and go to state 9
    FOR             shift, and go to state 10
    SWITCH          shift, and go to state 11
    CHARACTER       shift, and go to state 12
    STRING          shift, and go to state 13
    INT             shift, and go to state 14
    FLOAT           shift, and go to state 15
    BOOLEAN         shift, and go to state 16
    CONSTANT        shift, and go to state 17
    VOID            shift, and go to state 18
    RETURN          shift, and go to state 19
    ENUM            shift, and go to state 20
    PRINT           shift, and go to state 21
    '!'             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    $default  reduce using rule 1 (program)

    statement             go to state 83
    return_statement      go to state 28
    declaration           go to state 29
    variable_declaration  go to state 30
    enum_declaration      go to state 31
    assignment            go to state 32
    expression            go to state 33
    math_expression       go to state 34
    term                  go to state 35
    factor                go to state 36
    value                 go to state 37
    data_type             go to state 38
    logical_expression    go to state 39
    while_statement       go to state 40
    while_declaraction    go to state 41
    block                 go to state 42
    print_statement       go to state 43
    for_statement         go to state 44
    for_declaration       go to state 45
    do_while_statement    go to state 46
    switch_statement      go to state 47
    function              go to state 48
    function_call         go to state 49
    if_condition          go to state 50


State 27

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 28

   16 statement: return_statement . ';'

    ';'  shift, and go to state 84


State 29

    4 statement: declaration . ';'

    ';'  shift, and go to state 85


State 30

   21 declaration: variable_declaration .

    $default  reduce using rule 21 (declaration)


State 31

   22 declaration: enum_declaration .

    $default  reduce using rule 22 (declaration)


State 32

    5 statement: assignment . ';'

    ';'  shift, and go to state 86


State 33

    6 statement: expression . ';'
   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression

    EQUAL                  shift, and go to state 87
    NOT_EQUAL              shift, and go to state 88
    GREATER_THAN_OR_EQUAL  shift, and go to state 89
    LESS_THAN_OR_EQUAL     shift, and go to state 90
    AND                    shift, and go to state 91
    OR                     shift, and go to state 92
    '<'                    shift, and go to state 93
    '>'                    shift, and go to state 94
    '+'                    shift, and go to state 95
    '-'                    shift, and go to state 96
    ';'                    shift, and go to state 97


State 34

   32 expression: math_expression .

    $default  reduce using rule 32 (expression)


State 35

   38 math_expression: term .  [EQUAL, NOT_EQUAL, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, AND, OR, ',', '<', '>', '+', '-', ')', ';']
   39 term: term . '*' factor
   40     | term . '/' factor
   41     | term . '%' factor

    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100

    $default  reduce using rule 38 (math_expression)


State 36

   42 term: factor .

    $default  reduce using rule 42 (term)


State 37

   43 factor: value .

    $default  reduce using rule 43 (factor)


State 38

   23 variable_declaration: data_type . IDENTIFIER
   24                     | data_type . IDENTIFIER '=' expression
  102 function: data_type . IDENTIFIER '(' arguments ')' block

    IDENTIFIER  shift, and go to state 101


State 39

   33 expression: logical_expression .

    $default  reduce using rule 33 (expression)


State 40

   12 statement: while_statement .

    $default  reduce using rule 12 (statement)


State 41

   19 return_statement: . RETURN expression
   20                 | . RETURN
   21 declaration: . variable_declaration
   22            | . enum_declaration
   23 variable_declaration: . data_type IDENTIFIER
   24                     | . data_type IDENTIFIER '=' expression
   25                     | . CONSTANT data_type IDENTIFIER '=' expression
   26 enum_declaration: . ENUM IDENTIFIER '{' enum_list '}'
   31 assignment: . IDENTIFIER '=' expression
   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   50 data_type: . INT
   51          | . FLOAT
   52          | . BOOLEAN
   53          | . CHARACTER
   54          | . STRING
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
   64 while_statement: . while_declaraction block
   64                | while_declaraction . block
   65                | . while_declaraction block_statement
   65                | while_declaraction . block_statement
   66 while_declaraction: . WHILE '(' logical_expression ')'
   67 block: . '{' block_statements '}'
   70 block_statement: . declaration ';'
   71                | . assignment ';'
   72                | . expression ';'
   73                | . do_while_statement ';'
   74                | . if_condition block_statement
   75                | . if_condition block
   76                | . if_condition block_statement else_statement
   77                | . if_condition block else_statement
   78                | . while_statement
   79                | . for_statement
   80                | . switch_statement
   81                | . return_statement ';'
   82                | . print_statement ';'
   83                | . CONTINUE ';'
   84                | . BREAK ';'
   85 print_statement: . PRINT '(' argument_print ')'
   88 for_statement: . for_declaration block
   89              | . for_declaration block_statement
   90 for_declaration: . FOR '(' variable_declaration ';' logical_expression ';' expression ')'
   91 do_while_statement: . DO block while_declaraction
   92                   | . DO block_statement while_declaraction
   93 switch_statement: . SWITCH '(' expression ')' '{' case_statement '}'
  103 function_call: . IDENTIFIER '(' argument_call ')'
  107 if_condition: . IF '(' logical_expression ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    DO              shift, and go to state 8
    WHILE           shift, and go to state 9
    FOR             shift, and go to state 10
    BREAK           shift, and go to state 54
    CONTINUE        shift, and go to state 55
    SWITCH          shift, and go to state 11
    CHARACTER       shift, and go to state 12
    STRING          shift, and go to state 13
    INT             shift, and go to state 14
    FLOAT           shift, and go to state 15
    BOOLEAN         shift, and go to state 16
    CONSTANT        shift, and go to state 17
    RETURN          shift, and go to state 19
    ENUM            shift, and go to state 20
    PRINT           shift, and go to state 21
    '!'             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    return_statement      go to state 56
    declaration           go to state 57
    variable_declaration  go to state 30
    enum_declaration      go to state 31
    assignment            go to state 58
    expression            go to state 59
    math_expression       go to state 34
    term                  go to state 35
    factor                go to state 36
    value                 go to state 37
    data_type             go to state 60
    logical_expression    go to state 39
    while_statement       go to state 61
    while_declaraction    go to state 41
    block                 go to state 102
    block_statement       go to state 103
    print_statement       go to state 64
    for_statement         go to state 65
    for_declaration       go to state 45
    do_while_statement    go to state 66
    switch_statement      go to state 67
    function_call         go to state 49
    if_condition          go to state 68


State 42

   18 statement: block .

    $default  reduce using rule 18 (statement)


State 43

   17 statement: print_statement . ';'

    ';'  shift, and go to state 104


State 44

   13 statement: for_statement .

    $default  reduce using rule 13 (statement)


State 45

   19 return_statement: . RETURN expression
   20                 | . RETURN
   21 declaration: . variable_declaration
   22            | . enum_declaration
   23 variable_declaration: . data_type IDENTIFIER
   24                     | . data_type IDENTIFIER '=' expression
   25                     | . CONSTANT data_type IDENTIFIER '=' expression
   26 enum_declaration: . ENUM IDENTIFIER '{' enum_list '}'
   31 assignment: . IDENTIFIER '=' expression
   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   50 data_type: . INT
   51          | . FLOAT
   52          | . BOOLEAN
   53          | . CHARACTER
   54          | . STRING
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
   64 while_statement: . while_declaraction block
   65                | . while_declaraction block_statement
   66 while_declaraction: . WHILE '(' logical_expression ')'
   67 block: . '{' block_statements '}'
   70 block_statement: . declaration ';'
   71                | . assignment ';'
   72                | . expression ';'
   73                | . do_while_statement ';'
   74                | . if_condition block_statement
   75                | . if_condition block
   76                | . if_condition block_statement else_statement
   77                | . if_condition block else_statement
   78                | . while_statement
   79                | . for_statement
   80                | . switch_statement
   81                | . return_statement ';'
   82                | . print_statement ';'
   83                | . CONTINUE ';'
   84                | . BREAK ';'
   85 print_statement: . PRINT '(' argument_print ')'
   88 for_statement: . for_declaration block
   88              | for_declaration . block
   89              | . for_declaration block_statement
   89              | for_declaration . block_statement
   90 for_declaration: . FOR '(' variable_declaration ';' logical_expression ';' expression ')'
   91 do_while_statement: . DO block while_declaraction
   92                   | . DO block_statement while_declaraction
   93 switch_statement: . SWITCH '(' expression ')' '{' case_statement '}'
  103 function_call: . IDENTIFIER '(' argument_call ')'
  107 if_condition: . IF '(' logical_expression ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    DO              shift, and go to state 8
    WHILE           shift, and go to state 9
    FOR             shift, and go to state 10
    BREAK           shift, and go to state 54
    CONTINUE        shift, and go to state 55
    SWITCH          shift, and go to state 11
    CHARACTER       shift, and go to state 12
    STRING          shift, and go to state 13
    INT             shift, and go to state 14
    FLOAT           shift, and go to state 15
    BOOLEAN         shift, and go to state 16
    CONSTANT        shift, and go to state 17
    RETURN          shift, and go to state 19
    ENUM            shift, and go to state 20
    PRINT           shift, and go to state 21
    '!'             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    return_statement      go to state 56
    declaration           go to state 57
    variable_declaration  go to state 30
    enum_declaration      go to state 31
    assignment            go to state 58
    expression            go to state 59
    math_expression       go to state 34
    term                  go to state 35
    factor                go to state 36
    value                 go to state 37
    data_type             go to state 60
    logical_expression    go to state 39
    while_statement       go to state 61
    while_declaraction    go to state 41
    block                 go to state 105
    block_statement       go to state 106
    print_statement       go to state 64
    for_statement         go to state 65
    for_declaration       go to state 45
    do_while_statement    go to state 66
    switch_statement      go to state 67
    function_call         go to state 49
    if_condition          go to state 68


State 46

    7 statement: do_while_statement . ';'

    ';'  shift, and go to state 107


State 47

   14 statement: switch_statement .

    $default  reduce using rule 14 (statement)


State 48

   15 statement: function .

    $default  reduce using rule 15 (statement)


State 49

   35 expression: function_call .

    $default  reduce using rule 35 (expression)


State 50

    8 statement: if_condition . block_statement
    9          | if_condition . block
   10          | if_condition . block_statement else_statement
   11          | if_condition . block else_statement
   19 return_statement: . RETURN expression
   20                 | . RETURN
   21 declaration: . variable_declaration
   22            | . enum_declaration
   23 variable_declaration: . data_type IDENTIFIER
   24                     | . data_type IDENTIFIER '=' expression
   25                     | . CONSTANT data_type IDENTIFIER '=' expression
   26 enum_declaration: . ENUM IDENTIFIER '{' enum_list '}'
   31 assignment: . IDENTIFIER '=' expression
   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   50 data_type: . INT
   51          | . FLOAT
   52          | . BOOLEAN
   53          | . CHARACTER
   54          | . STRING
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
   64 while_statement: . while_declaraction block
   65                | . while_declaraction block_statement
   66 while_declaraction: . WHILE '(' logical_expression ')'
   67 block: . '{' block_statements '}'
   70 block_statement: . declaration ';'
   71                | . assignment ';'
   72                | . expression ';'
   73                | . do_while_statement ';'
   74                | . if_condition block_statement
   75                | . if_condition block
   76                | . if_condition block_statement else_statement
   77                | . if_condition block else_statement
   78                | . while_statement
   79                | . for_statement
   80                | . switch_statement
   81                | . return_statement ';'
   82                | . print_statement ';'
   83                | . CONTINUE ';'
   84                | . BREAK ';'
   85 print_statement: . PRINT '(' argument_print ')'
   88 for_statement: . for_declaration block
   89              | . for_declaration block_statement
   90 for_declaration: . FOR '(' variable_declaration ';' logical_expression ';' expression ')'
   91 do_while_statement: . DO block while_declaraction
   92                   | . DO block_statement while_declaraction
   93 switch_statement: . SWITCH '(' expression ')' '{' case_statement '}'
  103 function_call: . IDENTIFIER '(' argument_call ')'
  107 if_condition: . IF '(' logical_expression ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    DO              shift, and go to state 8
    WHILE           shift, and go to state 9
    FOR             shift, and go to state 10
    BREAK           shift, and go to state 54
    CONTINUE        shift, and go to state 55
    SWITCH          shift, and go to state 11
    CHARACTER       shift, and go to state 12
    STRING          shift, and go to state 13
    INT             shift, and go to state 14
    FLOAT           shift, and go to state 15
    BOOLEAN         shift, and go to state 16
    CONSTANT        shift, and go to state 17
    RETURN          shift, and go to state 19
    ENUM            shift, and go to state 20
    PRINT           shift, and go to state 21
    '!'             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    return_statement      go to state 56
    declaration           go to state 57
    variable_declaration  go to state 30
    enum_declaration      go to state 31
    assignment            go to state 58
    expression            go to state 59
    math_expression       go to state 34
    term                  go to state 35
    factor                go to state 36
    value                 go to state 37
    data_type             go to state 60
    logical_expression    go to state 39
    while_statement       go to state 61
    while_declaraction    go to state 41
    block                 go to state 108
    block_statement       go to state 109
    print_statement       go to state 64
    for_statement         go to state 65
    for_declaration       go to state 45
    do_while_statement    go to state 66
    switch_statement      go to state 67
    function_call         go to state 49
    if_condition          go to state 68


State 51

   31 assignment: IDENTIFIER '=' . expression
   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 110
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    function_call       go to state 49


State 52

   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
  103 function_call: . IDENTIFIER '(' argument_call ')'
  103              | IDENTIFIER '(' . argument_call ')'
  104 argument_call: . argument_call ',' expression
  105              | . expression
  106              | . %empty  [',', ')']

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    $default  reduce using rule 106 (argument_call)

    expression          go to state 111
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    function_call       go to state 49
    argument_call       go to state 112


State 53

   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
  103 function_call: . IDENTIFIER '(' argument_call ')'
  107 if_condition: IF '(' . logical_expression ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 113
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 114
    function_call       go to state 49


State 54

   84 block_statement: BREAK . ';'

    ';'  shift, and go to state 115


State 55

   83 block_statement: CONTINUE . ';'

    ';'  shift, and go to state 116


State 56

   81 block_statement: return_statement . ';'

    ';'  shift, and go to state 117


State 57

   70 block_statement: declaration . ';'

    ';'  shift, and go to state 118


State 58

   71 block_statement: assignment . ';'

    ';'  shift, and go to state 119


State 59

   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression
   72 block_statement: expression . ';'

    EQUAL                  shift, and go to state 87
    NOT_EQUAL              shift, and go to state 88
    GREATER_THAN_OR_EQUAL  shift, and go to state 89
    LESS_THAN_OR_EQUAL     shift, and go to state 90
    AND                    shift, and go to state 91
    OR                     shift, and go to state 92
    '<'                    shift, and go to state 93
    '>'                    shift, and go to state 94
    '+'                    shift, and go to state 95
    '-'                    shift, and go to state 96
    ';'                    shift, and go to state 120


State 60

   23 variable_declaration: data_type . IDENTIFIER
   24                     | data_type . IDENTIFIER '=' expression

    IDENTIFIER  shift, and go to state 121


State 61

   78 block_statement: while_statement .

    $default  reduce using rule 78 (block_statement)


State 62

   66 while_declaraction: . WHILE '(' logical_expression ')'
   91 do_while_statement: DO block . while_declaraction

    WHILE  shift, and go to state 9

    while_declaraction  go to state 122


State 63

   66 while_declaraction: . WHILE '(' logical_expression ')'
   92 do_while_statement: DO block_statement . while_declaraction

    WHILE  shift, and go to state 9

    while_declaraction  go to state 123


State 64

   82 block_statement: print_statement . ';'

    ';'  shift, and go to state 124


State 65

   79 block_statement: for_statement .

    $default  reduce using rule 79 (block_statement)


State 66

   73 block_statement: do_while_statement . ';'

    ';'  shift, and go to state 125


State 67

   80 block_statement: switch_statement .

    $default  reduce using rule 80 (block_statement)


State 68

   19 return_statement: . RETURN expression
   20                 | . RETURN
   21 declaration: . variable_declaration
   22            | . enum_declaration
   23 variable_declaration: . data_type IDENTIFIER
   24                     | . data_type IDENTIFIER '=' expression
   25                     | . CONSTANT data_type IDENTIFIER '=' expression
   26 enum_declaration: . ENUM IDENTIFIER '{' enum_list '}'
   31 assignment: . IDENTIFIER '=' expression
   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   50 data_type: . INT
   51          | . FLOAT
   52          | . BOOLEAN
   53          | . CHARACTER
   54          | . STRING
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
   64 while_statement: . while_declaraction block
   65                | . while_declaraction block_statement
   66 while_declaraction: . WHILE '(' logical_expression ')'
   67 block: . '{' block_statements '}'
   70 block_statement: . declaration ';'
   71                | . assignment ';'
   72                | . expression ';'
   73                | . do_while_statement ';'
   74                | . if_condition block_statement
   74                | if_condition . block_statement
   75                | . if_condition block
   75                | if_condition . block
   76                | . if_condition block_statement else_statement
   76                | if_condition . block_statement else_statement
   77                | . if_condition block else_statement
   77                | if_condition . block else_statement
   78                | . while_statement
   79                | . for_statement
   80                | . switch_statement
   81                | . return_statement ';'
   82                | . print_statement ';'
   83                | . CONTINUE ';'
   84                | . BREAK ';'
   85 print_statement: . PRINT '(' argument_print ')'
   88 for_statement: . for_declaration block
   89              | . for_declaration block_statement
   90 for_declaration: . FOR '(' variable_declaration ';' logical_expression ';' expression ')'
   91 do_while_statement: . DO block while_declaraction
   92                   | . DO block_statement while_declaraction
   93 switch_statement: . SWITCH '(' expression ')' '{' case_statement '}'
  103 function_call: . IDENTIFIER '(' argument_call ')'
  107 if_condition: . IF '(' logical_expression ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    DO              shift, and go to state 8
    WHILE           shift, and go to state 9
    FOR             shift, and go to state 10
    BREAK           shift, and go to state 54
    CONTINUE        shift, and go to state 55
    SWITCH          shift, and go to state 11
    CHARACTER       shift, and go to state 12
    STRING          shift, and go to state 13
    INT             shift, and go to state 14
    FLOAT           shift, and go to state 15
    BOOLEAN         shift, and go to state 16
    CONSTANT        shift, and go to state 17
    RETURN          shift, and go to state 19
    ENUM            shift, and go to state 20
    PRINT           shift, and go to state 21
    '!'             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    return_statement      go to state 56
    declaration           go to state 57
    variable_declaration  go to state 30
    enum_declaration      go to state 31
    assignment            go to state 58
    expression            go to state 59
    math_expression       go to state 34
    term                  go to state 35
    factor                go to state 36
    value                 go to state 37
    data_type             go to state 60
    logical_expression    go to state 39
    while_statement       go to state 61
    while_declaraction    go to state 41
    block                 go to state 126
    block_statement       go to state 127
    print_statement       go to state 64
    for_statement         go to state 65
    for_declaration       go to state 45
    do_while_statement    go to state 66
    switch_statement      go to state 67
    function_call         go to state 49
    if_condition          go to state 68


State 69

   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
   66 while_declaraction: WHILE '(' . logical_expression ')'
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 113
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 128
    function_call       go to state 49


State 70

   23 variable_declaration: . data_type IDENTIFIER
   24                     | . data_type IDENTIFIER '=' expression
   25                     | . CONSTANT data_type IDENTIFIER '=' expression
   50 data_type: . INT
   51          | . FLOAT
   52          | . BOOLEAN
   53          | . CHARACTER
   54          | . STRING
   90 for_declaration: FOR '(' . variable_declaration ';' logical_expression ';' expression ')'

    CHARACTER  shift, and go to state 12
    STRING     shift, and go to state 13
    INT        shift, and go to state 14
    FLOAT      shift, and go to state 15
    BOOLEAN    shift, and go to state 16
    CONSTANT   shift, and go to state 17

    variable_declaration  go to state 129
    data_type             go to state 60


State 71

   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
   93 switch_statement: SWITCH '(' . expression ')' '{' case_statement '}'
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 130
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    function_call       go to state 49


State 72

   25 variable_declaration: CONSTANT data_type . IDENTIFIER '=' expression

    IDENTIFIER  shift, and go to state 131


State 73

  101 function: VOID IDENTIFIER . '(' arguments ')' block

    '('  shift, and go to state 132


State 74

   44 factor: IDENTIFIER .  [EQUAL, NOT_EQUAL, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, AND, OR, ',', '<', '>', '+', '-', '*', '/', '%', ')', ';']
  103 function_call: IDENTIFIER . '(' argument_call ')'

    '('  shift, and go to state 52

    $default  reduce using rule 44 (factor)


State 75

   19 return_statement: RETURN expression .  [';']
   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression

    EQUAL                  shift, and go to state 87
    NOT_EQUAL              shift, and go to state 88
    GREATER_THAN_OR_EQUAL  shift, and go to state 89
    LESS_THAN_OR_EQUAL     shift, and go to state 90
    AND                    shift, and go to state 91
    OR                     shift, and go to state 92
    '<'                    shift, and go to state 93
    '>'                    shift, and go to state 94
    '+'                    shift, and go to state 95
    '-'                    shift, and go to state 96

    $default  reduce using rule 19 (return_statement)


State 76

   26 enum_declaration: ENUM IDENTIFIER . '{' enum_list '}'

    '{'  shift, and go to state 133


State 77

   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
   85 print_statement: PRINT '(' . argument_print ')'
   86 argument_print: . argument_print ',' expression
   87               | . expression
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 134
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    argument_print      go to state 135
    function_call       go to state 49


State 78

   36 math_expression: expression . '+' term
   37                | expression . '-' term
   55 logical_expression: '!' expression .  [EQUAL, NOT_EQUAL, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, AND, OR, ',', '<', '>', '+', '-', ')', ';']
   56                   | expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression

    $default  reduce using rule 55 (logical_expression)

    Conflict between rule 55 and token EQUAL resolved as reduce (EQUAL < '!').
    Conflict between rule 55 and token NOT_EQUAL resolved as reduce (NOT_EQUAL < '!').
    Conflict between rule 55 and token GREATER_THAN_OR_EQUAL resolved as reduce (GREATER_THAN_OR_EQUAL < '!').
    Conflict between rule 55 and token LESS_THAN_OR_EQUAL resolved as reduce (LESS_THAN_OR_EQUAL < '!').
    Conflict between rule 55 and token AND resolved as reduce (AND < '!').
    Conflict between rule 55 and token OR resolved as reduce (OR < '!').
    Conflict between rule 55 and token '<' resolved as reduce ('<' < '!').
    Conflict between rule 55 and token '>' resolved as reduce ('>' < '!').
    Conflict between rule 55 and token '+' resolved as reduce ('+' < '!').
    Conflict between rule 55 and token '-' resolved as reduce ('-' < '!').


State 79

   34 expression: '(' expression . ')'
   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression

    EQUAL                  shift, and go to state 87
    NOT_EQUAL              shift, and go to state 88
    GREATER_THAN_OR_EQUAL  shift, and go to state 89
    LESS_THAN_OR_EQUAL     shift, and go to state 90
    AND                    shift, and go to state 91
    OR                     shift, and go to state 92
    '<'                    shift, and go to state 93
    '>'                    shift, and go to state 94
    '+'                    shift, and go to state 95
    '-'                    shift, and go to state 96
    ')'                    shift, and go to state 136


State 80

   19 return_statement: . RETURN expression
   20                 | . RETURN
   21 declaration: . variable_declaration
   22            | . enum_declaration
   23 variable_declaration: . data_type IDENTIFIER
   24                     | . data_type IDENTIFIER '=' expression
   25                     | . CONSTANT data_type IDENTIFIER '=' expression
   26 enum_declaration: . ENUM IDENTIFIER '{' enum_list '}'
   31 assignment: . IDENTIFIER '=' expression
   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   50 data_type: . INT
   51          | . FLOAT
   52          | . BOOLEAN
   53          | . CHARACTER
   54          | . STRING
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
   64 while_statement: . while_declaraction block
   65                | . while_declaraction block_statement
   66 while_declaraction: . WHILE '(' logical_expression ')'
   67 block: '{' block_statements . '}'
   69 block_statements: block_statements . block_statement
   70 block_statement: . declaration ';'
   71                | . assignment ';'
   72                | . expression ';'
   73                | . do_while_statement ';'
   74                | . if_condition block_statement
   75                | . if_condition block
   76                | . if_condition block_statement else_statement
   77                | . if_condition block else_statement
   78                | . while_statement
   79                | . for_statement
   80                | . switch_statement
   81                | . return_statement ';'
   82                | . print_statement ';'
   83                | . CONTINUE ';'
   84                | . BREAK ';'
   85 print_statement: . PRINT '(' argument_print ')'
   88 for_statement: . for_declaration block
   89              | . for_declaration block_statement
   90 for_declaration: . FOR '(' variable_declaration ';' logical_expression ';' expression ')'
   91 do_while_statement: . DO block while_declaraction
   92                   | . DO block_statement while_declaraction
   93 switch_statement: . SWITCH '(' expression ')' '{' case_statement '}'
  103 function_call: . IDENTIFIER '(' argument_call ')'
  107 if_condition: . IF '(' logical_expression ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    DO              shift, and go to state 8
    WHILE           shift, and go to state 9
    FOR             shift, and go to state 10
    BREAK           shift, and go to state 54
    CONTINUE        shift, and go to state 55
    SWITCH          shift, and go to state 11
    CHARACTER       shift, and go to state 12
    STRING          shift, and go to state 13
    INT             shift, and go to state 14
    FLOAT           shift, and go to state 15
    BOOLEAN         shift, and go to state 16
    CONSTANT        shift, and go to state 17
    RETURN          shift, and go to state 19
    ENUM            shift, and go to state 20
    PRINT           shift, and go to state 21
    '!'             shift, and go to state 22
    '('             shift, and go to state 23
    '}'             shift, and go to state 137

    return_statement      go to state 56
    declaration           go to state 57
    variable_declaration  go to state 30
    enum_declaration      go to state 31
    assignment            go to state 58
    expression            go to state 59
    math_expression       go to state 34
    term                  go to state 35
    factor                go to state 36
    value                 go to state 37
    data_type             go to state 60
    logical_expression    go to state 39
    while_statement       go to state 61
    while_declaraction    go to state 41
    block_statement       go to state 138
    print_statement       go to state 64
    for_statement         go to state 65
    for_declaration       go to state 45
    do_while_statement    go to state 66
    switch_statement      go to state 67
    function_call         go to state 49
    if_condition          go to state 68


State 81

   68 block_statements: block_statement .

    $default  reduce using rule 68 (block_statements)


State 82

    0 $accept: program $end .

    $default  accept


State 83

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 84

   16 statement: return_statement ';' .

    $default  reduce using rule 16 (statement)


State 85

    4 statement: declaration ';' .

    $default  reduce using rule 4 (statement)


State 86

    5 statement: assignment ';' .

    $default  reduce using rule 5 (statement)


State 87

   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   62                   | expression EQUAL . expression
   63                   | . expression NOT_EQUAL expression
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 139
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    function_call       go to state 49


State 88

   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
   63                   | expression NOT_EQUAL . expression
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 140
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    function_call       go to state 49


State 89

   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   58                   | expression GREATER_THAN_OR_EQUAL . expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 141
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    function_call       go to state 49


State 90

   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   59                   | expression LESS_THAN_OR_EQUAL . expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 142
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    function_call       go to state 49


State 91

   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   60                   | expression AND . expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 143
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    function_call       go to state 49


State 92

   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   61                   | expression OR . expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 144
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    function_call       go to state 49


State 93

   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   56                   | expression '<' . expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 145
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    function_call       go to state 49


State 94

   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   57                   | expression '>' . expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 146
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    function_call       go to state 49


State 95

   36 math_expression: expression '+' . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 147

    term    go to state 148
    factor  go to state 36
    value   go to state 37


State 96

   37 math_expression: expression '-' . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 147

    term    go to state 149
    factor  go to state 36
    value   go to state 37


State 97

    6 statement: expression ';' .

    $default  reduce using rule 6 (statement)


State 98

   39 term: term '*' . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 147

    factor  go to state 150
    value   go to state 37


State 99

   40 term: term '/' . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 147

    factor  go to state 151
    value   go to state 37


State 100

   41 term: term '%' . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 147

    factor  go to state 152
    value   go to state 37


State 101

   23 variable_declaration: data_type IDENTIFIER .  [';']
   24                     | data_type IDENTIFIER . '=' expression
  102 function: data_type IDENTIFIER . '(' arguments ')' block

    '='  shift, and go to state 153
    '('  shift, and go to state 154

    $default  reduce using rule 23 (variable_declaration)


State 102

   64 while_statement: while_declaraction block .

    $default  reduce using rule 64 (while_statement)


State 103

   65 while_statement: while_declaraction block_statement .

    $default  reduce using rule 65 (while_statement)


State 104

   17 statement: print_statement ';' .

    $default  reduce using rule 17 (statement)


State 105

   88 for_statement: for_declaration block .

    $default  reduce using rule 88 (for_statement)


State 106

   89 for_statement: for_declaration block_statement .

    $default  reduce using rule 89 (for_statement)


State 107

    7 statement: do_while_statement ';' .

    $default  reduce using rule 7 (statement)


State 108

    9 statement: if_condition block .  [$end, INTEGER_TYPE, FLOAT_TYPE, CHARACTER_TYPE, STRING_TYPE, BOOLEAN_TYPE, IDENTIFIER, IF, DO, WHILE, FOR, SWITCH, CHARACTER, STRING, INT, FLOAT, BOOLEAN, CONSTANT, VOID, RETURN, ENUM, PRINT, '!', '(', '{']
   11          | if_condition block . else_statement
  108 else_statement: . ELSE block
  109               | . ELSE block_statement

    ELSE  shift, and go to state 155

    $default  reduce using rule 9 (statement)

    else_statement  go to state 156


State 109

    8 statement: if_condition block_statement .  [$end, INTEGER_TYPE, FLOAT_TYPE, CHARACTER_TYPE, STRING_TYPE, BOOLEAN_TYPE, IDENTIFIER, IF, DO, WHILE, FOR, SWITCH, CHARACTER, STRING, INT, FLOAT, BOOLEAN, CONSTANT, VOID, RETURN, ENUM, PRINT, '!', '(', '{']
   10          | if_condition block_statement . else_statement
  108 else_statement: . ELSE block
  109               | . ELSE block_statement

    ELSE  shift, and go to state 155

    $default  reduce using rule 8 (statement)

    else_statement  go to state 157


State 110

   31 assignment: IDENTIFIER '=' expression .  [';']
   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression

    EQUAL                  shift, and go to state 87
    NOT_EQUAL              shift, and go to state 88
    GREATER_THAN_OR_EQUAL  shift, and go to state 89
    LESS_THAN_OR_EQUAL     shift, and go to state 90
    AND                    shift, and go to state 91
    OR                     shift, and go to state 92
    '<'                    shift, and go to state 93
    '>'                    shift, and go to state 94
    '+'                    shift, and go to state 95
    '-'                    shift, and go to state 96

    $default  reduce using rule 31 (assignment)


State 111

   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression
  105 argument_call: expression .  [',', ')']

    EQUAL                  shift, and go to state 87
    NOT_EQUAL              shift, and go to state 88
    GREATER_THAN_OR_EQUAL  shift, and go to state 89
    LESS_THAN_OR_EQUAL     shift, and go to state 90
    AND                    shift, and go to state 91
    OR                     shift, and go to state 92
    '<'                    shift, and go to state 93
    '>'                    shift, and go to state 94
    '+'                    shift, and go to state 95
    '-'                    shift, and go to state 96

    $default  reduce using rule 105 (argument_call)


State 112

  103 function_call: IDENTIFIER '(' argument_call . ')'
  104 argument_call: argument_call . ',' expression

    ','  shift, and go to state 158
    ')'  shift, and go to state 159


State 113

   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression

    EQUAL                  shift, and go to state 87
    NOT_EQUAL              shift, and go to state 88
    GREATER_THAN_OR_EQUAL  shift, and go to state 89
    LESS_THAN_OR_EQUAL     shift, and go to state 90
    AND                    shift, and go to state 91
    OR                     shift, and go to state 92
    '<'                    shift, and go to state 93
    '>'                    shift, and go to state 94
    '+'                    shift, and go to state 95
    '-'                    shift, and go to state 96


State 114

   33 expression: logical_expression .  [EQUAL, NOT_EQUAL, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, AND, OR, '<', '>', '+', '-']
  107 if_condition: IF '(' logical_expression . ')'

    ')'  shift, and go to state 160

    $default  reduce using rule 33 (expression)


State 115

   84 block_statement: BREAK ';' .

    $default  reduce using rule 84 (block_statement)


State 116

   83 block_statement: CONTINUE ';' .

    $default  reduce using rule 83 (block_statement)


State 117

   81 block_statement: return_statement ';' .

    $default  reduce using rule 81 (block_statement)


State 118

   70 block_statement: declaration ';' .

    $default  reduce using rule 70 (block_statement)


State 119

   71 block_statement: assignment ';' .

    $default  reduce using rule 71 (block_statement)


State 120

   72 block_statement: expression ';' .

    $default  reduce using rule 72 (block_statement)


State 121

   23 variable_declaration: data_type IDENTIFIER .  [';']
   24                     | data_type IDENTIFIER . '=' expression

    '='  shift, and go to state 153

    $default  reduce using rule 23 (variable_declaration)


State 122

   91 do_while_statement: DO block while_declaraction .

    $default  reduce using rule 91 (do_while_statement)


State 123

   92 do_while_statement: DO block_statement while_declaraction .

    $default  reduce using rule 92 (do_while_statement)


State 124

   82 block_statement: print_statement ';' .

    $default  reduce using rule 82 (block_statement)


State 125

   73 block_statement: do_while_statement ';' .

    $default  reduce using rule 73 (block_statement)


State 126

   75 block_statement: if_condition block .  [$end, INTEGER_TYPE, FLOAT_TYPE, CHARACTER_TYPE, STRING_TYPE, BOOLEAN_TYPE, IDENTIFIER, IF, ELSE, DO, WHILE, FOR, BREAK, CONTINUE, SWITCH, CHARACTER, STRING, INT, FLOAT, BOOLEAN, CONSTANT, VOID, RETURN, ENUM, PRINT, '!', '(', '{', '}']
   77                | if_condition block . else_statement
  108 else_statement: . ELSE block
  109               | . ELSE block_statement

    ELSE  shift, and go to state 155

    ELSE      [reduce using rule 75 (block_statement)]
    $default  reduce using rule 75 (block_statement)

    else_statement  go to state 161


State 127

   74 block_statement: if_condition block_statement .  [$end, INTEGER_TYPE, FLOAT_TYPE, CHARACTER_TYPE, STRING_TYPE, BOOLEAN_TYPE, IDENTIFIER, IF, ELSE, DO, WHILE, FOR, BREAK, CONTINUE, SWITCH, CHARACTER, STRING, INT, FLOAT, BOOLEAN, CONSTANT, VOID, RETURN, ENUM, PRINT, '!', '(', '{', '}']
   76                | if_condition block_statement . else_statement
  108 else_statement: . ELSE block
  109               | . ELSE block_statement

    ELSE  shift, and go to state 155

    ELSE      [reduce using rule 74 (block_statement)]
    $default  reduce using rule 74 (block_statement)

    else_statement  go to state 162


State 128

   33 expression: logical_expression .  [EQUAL, NOT_EQUAL, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, AND, OR, '<', '>', '+', '-']
   66 while_declaraction: WHILE '(' logical_expression . ')'

    ')'  shift, and go to state 163

    $default  reduce using rule 33 (expression)


State 129

   90 for_declaration: FOR '(' variable_declaration . ';' logical_expression ';' expression ')'

    ';'  shift, and go to state 164


State 130

   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression
   93 switch_statement: SWITCH '(' expression . ')' '{' case_statement '}'

    EQUAL                  shift, and go to state 87
    NOT_EQUAL              shift, and go to state 88
    GREATER_THAN_OR_EQUAL  shift, and go to state 89
    LESS_THAN_OR_EQUAL     shift, and go to state 90
    AND                    shift, and go to state 91
    OR                     shift, and go to state 92
    '<'                    shift, and go to state 93
    '>'                    shift, and go to state 94
    '+'                    shift, and go to state 95
    '-'                    shift, and go to state 96
    ')'                    shift, and go to state 165


State 131

   25 variable_declaration: CONSTANT data_type IDENTIFIER . '=' expression

    '='  shift, and go to state 166


State 132

   50 data_type: . INT
   51          | . FLOAT
   52          | . BOOLEAN
   53          | . CHARACTER
   54          | . STRING
   96 arguments: . arguments ',' argument
   97          | . argument
   98          | . %empty  [',', ')']
   99 argument: . data_type IDENTIFIER
  100         | . data_type IDENTIFIER '=' expression
  101 function: VOID IDENTIFIER '(' . arguments ')' block

    CHARACTER  shift, and go to state 12
    STRING     shift, and go to state 13
    INT        shift, and go to state 14
    FLOAT      shift, and go to state 15
    BOOLEAN    shift, and go to state 16

    $default  reduce using rule 98 (arguments)

    data_type  go to state 167
    arguments  go to state 168
    argument   go to state 169


State 133

   26 enum_declaration: ENUM IDENTIFIER '{' . enum_list '}'
   27 enum_list: . enum_item
   28          | . enum_list ',' enum_item
   29 enum_item: . IDENTIFIER '=' INTEGER_TYPE
   30          | . IDENTIFIER

    IDENTIFIER  shift, and go to state 170

    enum_list  go to state 171
    enum_item  go to state 172


State 134

   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression
   87 argument_print: expression .  [',', ')']

    EQUAL                  shift, and go to state 87
    NOT_EQUAL              shift, and go to state 88
    GREATER_THAN_OR_EQUAL  shift, and go to state 89
    LESS_THAN_OR_EQUAL     shift, and go to state 90
    AND                    shift, and go to state 91
    OR                     shift, and go to state 92
    '<'                    shift, and go to state 93
    '>'                    shift, and go to state 94
    '+'                    shift, and go to state 95
    '-'                    shift, and go to state 96

    $default  reduce using rule 87 (argument_print)


State 135

   85 print_statement: PRINT '(' argument_print . ')'
   86 argument_print: argument_print . ',' expression

    ','  shift, and go to state 173
    ')'  shift, and go to state 174


State 136

   34 expression: '(' expression ')' .

    $default  reduce using rule 34 (expression)


State 137

   67 block: '{' block_statements '}' .

    $default  reduce using rule 67 (block)


State 138

   69 block_statements: block_statements block_statement .

    $default  reduce using rule 69 (block_statements)


State 139

   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   62                   | expression EQUAL expression .  [EQUAL, NOT_EQUAL, AND, OR, ',', ')', ';']
   63                   | expression . NOT_EQUAL expression

    GREATER_THAN_OR_EQUAL  shift, and go to state 89
    LESS_THAN_OR_EQUAL     shift, and go to state 90
    '<'                    shift, and go to state 93
    '>'                    shift, and go to state 94
    '+'                    shift, and go to state 95
    '-'                    shift, and go to state 96

    $default  reduce using rule 62 (logical_expression)

    Conflict between rule 62 and token EQUAL resolved as reduce (%left EQUAL).
    Conflict between rule 62 and token NOT_EQUAL resolved as reduce (%left NOT_EQUAL).
    Conflict between rule 62 and token GREATER_THAN_OR_EQUAL resolved as shift (EQUAL < GREATER_THAN_OR_EQUAL).
    Conflict between rule 62 and token LESS_THAN_OR_EQUAL resolved as shift (EQUAL < LESS_THAN_OR_EQUAL).
    Conflict between rule 62 and token AND resolved as reduce (AND < EQUAL).
    Conflict between rule 62 and token OR resolved as reduce (OR < EQUAL).
    Conflict between rule 62 and token '<' resolved as shift (EQUAL < '<').
    Conflict between rule 62 and token '>' resolved as shift (EQUAL < '>').
    Conflict between rule 62 and token '+' resolved as shift (EQUAL < '+').
    Conflict between rule 62 and token '-' resolved as shift (EQUAL < '-').


State 140

   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression
   63                   | expression NOT_EQUAL expression .  [EQUAL, NOT_EQUAL, AND, OR, ',', ')', ';']

    GREATER_THAN_OR_EQUAL  shift, and go to state 89
    LESS_THAN_OR_EQUAL     shift, and go to state 90
    '<'                    shift, and go to state 93
    '>'                    shift, and go to state 94
    '+'                    shift, and go to state 95
    '-'                    shift, and go to state 96

    $default  reduce using rule 63 (logical_expression)

    Conflict between rule 63 and token EQUAL resolved as reduce (%left EQUAL).
    Conflict between rule 63 and token NOT_EQUAL resolved as reduce (%left NOT_EQUAL).
    Conflict between rule 63 and token GREATER_THAN_OR_EQUAL resolved as shift (NOT_EQUAL < GREATER_THAN_OR_EQUAL).
    Conflict between rule 63 and token LESS_THAN_OR_EQUAL resolved as shift (NOT_EQUAL < LESS_THAN_OR_EQUAL).
    Conflict between rule 63 and token AND resolved as reduce (AND < NOT_EQUAL).
    Conflict between rule 63 and token OR resolved as reduce (OR < NOT_EQUAL).
    Conflict between rule 63 and token '<' resolved as shift (NOT_EQUAL < '<').
    Conflict between rule 63 and token '>' resolved as shift (NOT_EQUAL < '>').
    Conflict between rule 63 and token '+' resolved as shift (NOT_EQUAL < '+').
    Conflict between rule 63 and token '-' resolved as shift (NOT_EQUAL < '-').


State 141

   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   58                   | expression GREATER_THAN_OR_EQUAL expression .  [EQUAL, NOT_EQUAL, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, AND, OR, ',', '<', '>', ')', ';']
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96

    $default  reduce using rule 58 (logical_expression)

    Conflict between rule 58 and token EQUAL resolved as reduce (EQUAL < GREATER_THAN_OR_EQUAL).
    Conflict between rule 58 and token NOT_EQUAL resolved as reduce (NOT_EQUAL < GREATER_THAN_OR_EQUAL).
    Conflict between rule 58 and token GREATER_THAN_OR_EQUAL resolved as reduce (%left GREATER_THAN_OR_EQUAL).
    Conflict between rule 58 and token LESS_THAN_OR_EQUAL resolved as reduce (%left LESS_THAN_OR_EQUAL).
    Conflict between rule 58 and token AND resolved as reduce (AND < GREATER_THAN_OR_EQUAL).
    Conflict between rule 58 and token OR resolved as reduce (OR < GREATER_THAN_OR_EQUAL).
    Conflict between rule 58 and token '<' resolved as reduce (%left '<').
    Conflict between rule 58 and token '>' resolved as reduce (%left '>').
    Conflict between rule 58 and token '+' resolved as shift (GREATER_THAN_OR_EQUAL < '+').
    Conflict between rule 58 and token '-' resolved as shift (GREATER_THAN_OR_EQUAL < '-').


State 142

   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   59                   | expression LESS_THAN_OR_EQUAL expression .  [EQUAL, NOT_EQUAL, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, AND, OR, ',', '<', '>', ')', ';']
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96

    $default  reduce using rule 59 (logical_expression)

    Conflict between rule 59 and token EQUAL resolved as reduce (EQUAL < LESS_THAN_OR_EQUAL).
    Conflict between rule 59 and token NOT_EQUAL resolved as reduce (NOT_EQUAL < LESS_THAN_OR_EQUAL).
    Conflict between rule 59 and token GREATER_THAN_OR_EQUAL resolved as reduce (%left GREATER_THAN_OR_EQUAL).
    Conflict between rule 59 and token LESS_THAN_OR_EQUAL resolved as reduce (%left LESS_THAN_OR_EQUAL).
    Conflict between rule 59 and token AND resolved as reduce (AND < LESS_THAN_OR_EQUAL).
    Conflict between rule 59 and token OR resolved as reduce (OR < LESS_THAN_OR_EQUAL).
    Conflict between rule 59 and token '<' resolved as reduce (%left '<').
    Conflict between rule 59 and token '>' resolved as reduce (%left '>').
    Conflict between rule 59 and token '+' resolved as shift (LESS_THAN_OR_EQUAL < '+').
    Conflict between rule 59 and token '-' resolved as shift (LESS_THAN_OR_EQUAL < '-').


State 143

   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   60                   | expression AND expression .  [AND, ',', ')', ';']
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression

    EQUAL                  shift, and go to state 87
    NOT_EQUAL              shift, and go to state 88
    GREATER_THAN_OR_EQUAL  shift, and go to state 89
    LESS_THAN_OR_EQUAL     shift, and go to state 90
    OR                     shift, and go to state 92
    '<'                    shift, and go to state 93
    '>'                    shift, and go to state 94
    '+'                    shift, and go to state 95
    '-'                    shift, and go to state 96

    $default  reduce using rule 60 (logical_expression)

    Conflict between rule 60 and token EQUAL resolved as shift (AND < EQUAL).
    Conflict between rule 60 and token NOT_EQUAL resolved as shift (AND < NOT_EQUAL).
    Conflict between rule 60 and token GREATER_THAN_OR_EQUAL resolved as shift (AND < GREATER_THAN_OR_EQUAL).
    Conflict between rule 60 and token LESS_THAN_OR_EQUAL resolved as shift (AND < LESS_THAN_OR_EQUAL).
    Conflict between rule 60 and token AND resolved as reduce (%left AND).
    Conflict between rule 60 and token OR resolved as shift (AND < OR).
    Conflict between rule 60 and token '<' resolved as shift (AND < '<').
    Conflict between rule 60 and token '>' resolved as shift (AND < '>').
    Conflict between rule 60 and token '+' resolved as shift (AND < '+').
    Conflict between rule 60 and token '-' resolved as shift (AND < '-').


State 144

   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   61                   | expression OR expression .  [AND, OR, ',', ')', ';']
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression

    EQUAL                  shift, and go to state 87
    NOT_EQUAL              shift, and go to state 88
    GREATER_THAN_OR_EQUAL  shift, and go to state 89
    LESS_THAN_OR_EQUAL     shift, and go to state 90
    '<'                    shift, and go to state 93
    '>'                    shift, and go to state 94
    '+'                    shift, and go to state 95
    '-'                    shift, and go to state 96

    $default  reduce using rule 61 (logical_expression)

    Conflict between rule 61 and token EQUAL resolved as shift (OR < EQUAL).
    Conflict between rule 61 and token NOT_EQUAL resolved as shift (OR < NOT_EQUAL).
    Conflict between rule 61 and token GREATER_THAN_OR_EQUAL resolved as shift (OR < GREATER_THAN_OR_EQUAL).
    Conflict between rule 61 and token LESS_THAN_OR_EQUAL resolved as shift (OR < LESS_THAN_OR_EQUAL).
    Conflict between rule 61 and token AND resolved as reduce (AND < OR).
    Conflict between rule 61 and token OR resolved as reduce (%left OR).
    Conflict between rule 61 and token '<' resolved as shift (OR < '<').
    Conflict between rule 61 and token '>' resolved as shift (OR < '>').
    Conflict between rule 61 and token '+' resolved as shift (OR < '+').
    Conflict between rule 61 and token '-' resolved as shift (OR < '-').


State 145

   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   56                   | expression '<' expression .  [EQUAL, NOT_EQUAL, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, AND, OR, ',', '<', '>', ')', ';']
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96

    $default  reduce using rule 56 (logical_expression)

    Conflict between rule 56 and token EQUAL resolved as reduce (EQUAL < '<').
    Conflict between rule 56 and token NOT_EQUAL resolved as reduce (NOT_EQUAL < '<').
    Conflict between rule 56 and token GREATER_THAN_OR_EQUAL resolved as reduce (%left GREATER_THAN_OR_EQUAL).
    Conflict between rule 56 and token LESS_THAN_OR_EQUAL resolved as reduce (%left LESS_THAN_OR_EQUAL).
    Conflict between rule 56 and token AND resolved as reduce (AND < '<').
    Conflict between rule 56 and token OR resolved as reduce (OR < '<').
    Conflict between rule 56 and token '<' resolved as reduce (%left '<').
    Conflict between rule 56 and token '>' resolved as reduce (%left '>').
    Conflict between rule 56 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 56 and token '-' resolved as shift ('<' < '-').


State 146

   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   57                   | expression '>' expression .  [EQUAL, NOT_EQUAL, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, AND, OR, ',', '<', '>', ')', ';']
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96

    $default  reduce using rule 57 (logical_expression)

    Conflict between rule 57 and token EQUAL resolved as reduce (EQUAL < '>').
    Conflict between rule 57 and token NOT_EQUAL resolved as reduce (NOT_EQUAL < '>').
    Conflict between rule 57 and token GREATER_THAN_OR_EQUAL resolved as reduce (%left GREATER_THAN_OR_EQUAL).
    Conflict between rule 57 and token LESS_THAN_OR_EQUAL resolved as reduce (%left LESS_THAN_OR_EQUAL).
    Conflict between rule 57 and token AND resolved as reduce (AND < '>').
    Conflict between rule 57 and token OR resolved as reduce (OR < '>').
    Conflict between rule 57 and token '<' resolved as reduce (%left '<').
    Conflict between rule 57 and token '>' resolved as reduce (%left '>').
    Conflict between rule 57 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 57 and token '-' resolved as shift ('>' < '-').


State 147

   44 factor: IDENTIFIER .

    $default  reduce using rule 44 (factor)


State 148

   36 math_expression: expression '+' term .  [EQUAL, NOT_EQUAL, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, AND, OR, ',', '<', '>', '+', '-', ')', ';']
   39 term: term . '*' factor
   40     | term . '/' factor
   41     | term . '%' factor

    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100

    $default  reduce using rule 36 (math_expression)


State 149

   37 math_expression: expression '-' term .  [EQUAL, NOT_EQUAL, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, AND, OR, ',', '<', '>', '+', '-', ')', ';']
   39 term: term . '*' factor
   40     | term . '/' factor
   41     | term . '%' factor

    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100

    $default  reduce using rule 37 (math_expression)


State 150

   39 term: term '*' factor .

    $default  reduce using rule 39 (term)


State 151

   40 term: term '/' factor .

    $default  reduce using rule 40 (term)


State 152

   41 term: term '%' factor .

    $default  reduce using rule 41 (term)


State 153

   24 variable_declaration: data_type IDENTIFIER '=' . expression
   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 175
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    function_call       go to state 49


State 154

   50 data_type: . INT
   51          | . FLOAT
   52          | . BOOLEAN
   53          | . CHARACTER
   54          | . STRING
   96 arguments: . arguments ',' argument
   97          | . argument
   98          | . %empty  [',', ')']
   99 argument: . data_type IDENTIFIER
  100         | . data_type IDENTIFIER '=' expression
  102 function: data_type IDENTIFIER '(' . arguments ')' block

    CHARACTER  shift, and go to state 12
    STRING     shift, and go to state 13
    INT        shift, and go to state 14
    FLOAT      shift, and go to state 15
    BOOLEAN    shift, and go to state 16

    $default  reduce using rule 98 (arguments)

    data_type  go to state 167
    arguments  go to state 176
    argument   go to state 169


State 155

   19 return_statement: . RETURN expression
   20                 | . RETURN
   21 declaration: . variable_declaration
   22            | . enum_declaration
   23 variable_declaration: . data_type IDENTIFIER
   24                     | . data_type IDENTIFIER '=' expression
   25                     | . CONSTANT data_type IDENTIFIER '=' expression
   26 enum_declaration: . ENUM IDENTIFIER '{' enum_list '}'
   31 assignment: . IDENTIFIER '=' expression
   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   50 data_type: . INT
   51          | . FLOAT
   52          | . BOOLEAN
   53          | . CHARACTER
   54          | . STRING
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
   64 while_statement: . while_declaraction block
   65                | . while_declaraction block_statement
   66 while_declaraction: . WHILE '(' logical_expression ')'
   67 block: . '{' block_statements '}'
   70 block_statement: . declaration ';'
   71                | . assignment ';'
   72                | . expression ';'
   73                | . do_while_statement ';'
   74                | . if_condition block_statement
   75                | . if_condition block
   76                | . if_condition block_statement else_statement
   77                | . if_condition block else_statement
   78                | . while_statement
   79                | . for_statement
   80                | . switch_statement
   81                | . return_statement ';'
   82                | . print_statement ';'
   83                | . CONTINUE ';'
   84                | . BREAK ';'
   85 print_statement: . PRINT '(' argument_print ')'
   88 for_statement: . for_declaration block
   89              | . for_declaration block_statement
   90 for_declaration: . FOR '(' variable_declaration ';' logical_expression ';' expression ')'
   91 do_while_statement: . DO block while_declaraction
   92                   | . DO block_statement while_declaraction
   93 switch_statement: . SWITCH '(' expression ')' '{' case_statement '}'
  103 function_call: . IDENTIFIER '(' argument_call ')'
  107 if_condition: . IF '(' logical_expression ')'
  108 else_statement: ELSE . block
  109               | ELSE . block_statement

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    IF              shift, and go to state 7
    DO              shift, and go to state 8
    WHILE           shift, and go to state 9
    FOR             shift, and go to state 10
    BREAK           shift, and go to state 54
    CONTINUE        shift, and go to state 55
    SWITCH          shift, and go to state 11
    CHARACTER       shift, and go to state 12
    STRING          shift, and go to state 13
    INT             shift, and go to state 14
    FLOAT           shift, and go to state 15
    BOOLEAN         shift, and go to state 16
    CONSTANT        shift, and go to state 17
    RETURN          shift, and go to state 19
    ENUM            shift, and go to state 20
    PRINT           shift, and go to state 21
    '!'             shift, and go to state 22
    '('             shift, and go to state 23
    '{'             shift, and go to state 24

    return_statement      go to state 56
    declaration           go to state 57
    variable_declaration  go to state 30
    enum_declaration      go to state 31
    assignment            go to state 58
    expression            go to state 59
    math_expression       go to state 34
    term                  go to state 35
    factor                go to state 36
    value                 go to state 37
    data_type             go to state 60
    logical_expression    go to state 39
    while_statement       go to state 61
    while_declaraction    go to state 41
    block                 go to state 177
    block_statement       go to state 178
    print_statement       go to state 64
    for_statement         go to state 65
    for_declaration       go to state 45
    do_while_statement    go to state 66
    switch_statement      go to state 67
    function_call         go to state 49
    if_condition          go to state 68


State 156

   11 statement: if_condition block else_statement .

    $default  reduce using rule 11 (statement)


State 157

   10 statement: if_condition block_statement else_statement .

    $default  reduce using rule 10 (statement)


State 158

   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
  103 function_call: . IDENTIFIER '(' argument_call ')'
  104 argument_call: argument_call ',' . expression

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 179
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    function_call       go to state 49


State 159

  103 function_call: IDENTIFIER '(' argument_call ')' .

    $default  reduce using rule 103 (function_call)


State 160

  107 if_condition: IF '(' logical_expression ')' .

    $default  reduce using rule 107 (if_condition)


State 161

   77 block_statement: if_condition block else_statement .

    $default  reduce using rule 77 (block_statement)


State 162

   76 block_statement: if_condition block_statement else_statement .

    $default  reduce using rule 76 (block_statement)


State 163

   66 while_declaraction: WHILE '(' logical_expression ')' .

    $default  reduce using rule 66 (while_declaraction)


State 164

   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
   90 for_declaration: FOR '(' variable_declaration ';' . logical_expression ';' expression ')'
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 113
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 180
    function_call       go to state 49


State 165

   93 switch_statement: SWITCH '(' expression ')' . '{' case_statement '}'

    '{'  shift, and go to state 181


State 166

   25 variable_declaration: CONSTANT data_type IDENTIFIER '=' . expression
   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 182
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    function_call       go to state 49


State 167

   99 argument: data_type . IDENTIFIER
  100         | data_type . IDENTIFIER '=' expression

    IDENTIFIER  shift, and go to state 183


State 168

   96 arguments: arguments . ',' argument
  101 function: VOID IDENTIFIER '(' arguments . ')' block

    ','  shift, and go to state 184
    ')'  shift, and go to state 185


State 169

   97 arguments: argument .

    $default  reduce using rule 97 (arguments)


State 170

   29 enum_item: IDENTIFIER . '=' INTEGER_TYPE
   30          | IDENTIFIER .  [',', '}']

    '='  shift, and go to state 186

    $default  reduce using rule 30 (enum_item)


State 171

   26 enum_declaration: ENUM IDENTIFIER '{' enum_list . '}'
   28 enum_list: enum_list . ',' enum_item

    ','  shift, and go to state 187
    '}'  shift, and go to state 188


State 172

   27 enum_list: enum_item .

    $default  reduce using rule 27 (enum_list)


State 173

   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
   86 argument_print: argument_print ',' . expression
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 189
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    function_call       go to state 49


State 174

   85 print_statement: PRINT '(' argument_print ')' .

    $default  reduce using rule 85 (print_statement)


State 175

   24 variable_declaration: data_type IDENTIFIER '=' expression .  [';']
   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression

    EQUAL                  shift, and go to state 87
    NOT_EQUAL              shift, and go to state 88
    GREATER_THAN_OR_EQUAL  shift, and go to state 89
    LESS_THAN_OR_EQUAL     shift, and go to state 90
    AND                    shift, and go to state 91
    OR                     shift, and go to state 92
    '<'                    shift, and go to state 93
    '>'                    shift, and go to state 94
    '+'                    shift, and go to state 95
    '-'                    shift, and go to state 96

    $default  reduce using rule 24 (variable_declaration)


State 176

   96 arguments: arguments . ',' argument
  102 function: data_type IDENTIFIER '(' arguments . ')' block

    ','  shift, and go to state 184
    ')'  shift, and go to state 190


State 177

  108 else_statement: ELSE block .

    $default  reduce using rule 108 (else_statement)


State 178

  109 else_statement: ELSE block_statement .

    $default  reduce using rule 109 (else_statement)


State 179

   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression
  104 argument_call: argument_call ',' expression .  [',', ')']

    EQUAL                  shift, and go to state 87
    NOT_EQUAL              shift, and go to state 88
    GREATER_THAN_OR_EQUAL  shift, and go to state 89
    LESS_THAN_OR_EQUAL     shift, and go to state 90
    AND                    shift, and go to state 91
    OR                     shift, and go to state 92
    '<'                    shift, and go to state 93
    '>'                    shift, and go to state 94
    '+'                    shift, and go to state 95
    '-'                    shift, and go to state 96

    $default  reduce using rule 104 (argument_call)


State 180

   33 expression: logical_expression .  [EQUAL, NOT_EQUAL, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, AND, OR, '<', '>', '+', '-']
   90 for_declaration: FOR '(' variable_declaration ';' logical_expression . ';' expression ')'

    ';'  shift, and go to state 191

    $default  reduce using rule 33 (expression)


State 181

   93 switch_statement: SWITCH '(' expression ')' '{' . case_statement '}'
   94 case_statement: . CASE value ':' block case_statement
   95               | . DEFAULT ':' block

    CASE     shift, and go to state 192
    DEFAULT  shift, and go to state 193

    case_statement  go to state 194


State 182

   25 variable_declaration: CONSTANT data_type IDENTIFIER '=' expression .  [';']
   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression

    EQUAL                  shift, and go to state 87
    NOT_EQUAL              shift, and go to state 88
    GREATER_THAN_OR_EQUAL  shift, and go to state 89
    LESS_THAN_OR_EQUAL     shift, and go to state 90
    AND                    shift, and go to state 91
    OR                     shift, and go to state 92
    '<'                    shift, and go to state 93
    '>'                    shift, and go to state 94
    '+'                    shift, and go to state 95
    '-'                    shift, and go to state 96

    $default  reduce using rule 25 (variable_declaration)


State 183

   99 argument: data_type IDENTIFIER .  [',', ')']
  100         | data_type IDENTIFIER . '=' expression

    '='  shift, and go to state 195

    $default  reduce using rule 99 (argument)


State 184

   50 data_type: . INT
   51          | . FLOAT
   52          | . BOOLEAN
   53          | . CHARACTER
   54          | . STRING
   96 arguments: arguments ',' . argument
   99 argument: . data_type IDENTIFIER
  100         | . data_type IDENTIFIER '=' expression

    CHARACTER  shift, and go to state 12
    STRING     shift, and go to state 13
    INT        shift, and go to state 14
    FLOAT      shift, and go to state 15
    BOOLEAN    shift, and go to state 16

    data_type  go to state 167
    argument   go to state 196


State 185

   67 block: . '{' block_statements '}'
  101 function: VOID IDENTIFIER '(' arguments ')' . block

    '{'  shift, and go to state 24

    block  go to state 197


State 186

   29 enum_item: IDENTIFIER '=' . INTEGER_TYPE

    INTEGER_TYPE  shift, and go to state 198


State 187

   28 enum_list: enum_list ',' . enum_item
   29 enum_item: . IDENTIFIER '=' INTEGER_TYPE
   30          | . IDENTIFIER

    IDENTIFIER  shift, and go to state 170

    enum_item  go to state 199


State 188

   26 enum_declaration: ENUM IDENTIFIER '{' enum_list '}' .

    $default  reduce using rule 26 (enum_declaration)


State 189

   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression
   86 argument_print: argument_print ',' expression .  [',', ')']

    EQUAL                  shift, and go to state 87
    NOT_EQUAL              shift, and go to state 88
    GREATER_THAN_OR_EQUAL  shift, and go to state 89
    LESS_THAN_OR_EQUAL     shift, and go to state 90
    AND                    shift, and go to state 91
    OR                     shift, and go to state 92
    '<'                    shift, and go to state 93
    '>'                    shift, and go to state 94
    '+'                    shift, and go to state 95
    '-'                    shift, and go to state 96

    $default  reduce using rule 86 (argument_print)


State 190

   67 block: . '{' block_statements '}'
  102 function: data_type IDENTIFIER '(' arguments ')' . block

    '{'  shift, and go to state 24

    block  go to state 200


State 191

   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
   90 for_declaration: FOR '(' variable_declaration ';' logical_expression ';' . expression ')'
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 201
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    function_call       go to state 49


State 192

   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   94 case_statement: CASE . value ':' block case_statement

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5

    value  go to state 202


State 193

   95 case_statement: DEFAULT . ':' block

    ':'  shift, and go to state 203


State 194

   93 switch_statement: SWITCH '(' expression ')' '{' case_statement . '}'

    '}'  shift, and go to state 204


State 195

   32 expression: . math_expression
   33           | . logical_expression
   34           | . '(' expression ')'
   35           | . function_call
   36 math_expression: . expression '+' term
   37                | . expression '-' term
   38                | . term
   39 term: . term '*' factor
   40     | . term '/' factor
   41     | . term '%' factor
   42     | . factor
   43 factor: . value
   44       | . IDENTIFIER
   45 value: . INTEGER_TYPE
   46      | . FLOAT_TYPE
   47      | . BOOLEAN_TYPE
   48      | . CHARACTER_TYPE
   49      | . STRING_TYPE
   55 logical_expression: . '!' expression
   56                   | . expression '<' expression
   57                   | . expression '>' expression
   58                   | . expression GREATER_THAN_OR_EQUAL expression
   59                   | . expression LESS_THAN_OR_EQUAL expression
   60                   | . expression AND expression
   61                   | . expression OR expression
   62                   | . expression EQUAL expression
   63                   | . expression NOT_EQUAL expression
  100 argument: data_type IDENTIFIER '=' . expression
  103 function_call: . IDENTIFIER '(' argument_call ')'

    INTEGER_TYPE    shift, and go to state 1
    FLOAT_TYPE      shift, and go to state 2
    CHARACTER_TYPE  shift, and go to state 3
    STRING_TYPE     shift, and go to state 4
    BOOLEAN_TYPE    shift, and go to state 5
    IDENTIFIER      shift, and go to state 74
    '!'             shift, and go to state 22
    '('             shift, and go to state 23

    expression          go to state 205
    math_expression     go to state 34
    term                go to state 35
    factor              go to state 36
    value               go to state 37
    logical_expression  go to state 39
    function_call       go to state 49


State 196

   96 arguments: arguments ',' argument .

    $default  reduce using rule 96 (arguments)


State 197

  101 function: VOID IDENTIFIER '(' arguments ')' block .

    $default  reduce using rule 101 (function)


State 198

   29 enum_item: IDENTIFIER '=' INTEGER_TYPE .

    $default  reduce using rule 29 (enum_item)


State 199

   28 enum_list: enum_list ',' enum_item .

    $default  reduce using rule 28 (enum_list)


State 200

  102 function: data_type IDENTIFIER '(' arguments ')' block .

    $default  reduce using rule 102 (function)


State 201

   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression
   90 for_declaration: FOR '(' variable_declaration ';' logical_expression ';' expression . ')'

    EQUAL                  shift, and go to state 87
    NOT_EQUAL              shift, and go to state 88
    GREATER_THAN_OR_EQUAL  shift, and go to state 89
    LESS_THAN_OR_EQUAL     shift, and go to state 90
    AND                    shift, and go to state 91
    OR                     shift, and go to state 92
    '<'                    shift, and go to state 93
    '>'                    shift, and go to state 94
    '+'                    shift, and go to state 95
    '-'                    shift, and go to state 96
    ')'                    shift, and go to state 206


State 202

   94 case_statement: CASE value . ':' block case_statement

    ':'  shift, and go to state 207


State 203

   67 block: . '{' block_statements '}'
   95 case_statement: DEFAULT ':' . block

    '{'  shift, and go to state 24

    block  go to state 208


State 204

   93 switch_statement: SWITCH '(' expression ')' '{' case_statement '}' .

    $default  reduce using rule 93 (switch_statement)


State 205

   36 math_expression: expression . '+' term
   37                | expression . '-' term
   56 logical_expression: expression . '<' expression
   57                   | expression . '>' expression
   58                   | expression . GREATER_THAN_OR_EQUAL expression
   59                   | expression . LESS_THAN_OR_EQUAL expression
   60                   | expression . AND expression
   61                   | expression . OR expression
   62                   | expression . EQUAL expression
   63                   | expression . NOT_EQUAL expression
  100 argument: data_type IDENTIFIER '=' expression .  [',', ')']

    EQUAL                  shift, and go to state 87
    NOT_EQUAL              shift, and go to state 88
    GREATER_THAN_OR_EQUAL  shift, and go to state 89
    LESS_THAN_OR_EQUAL     shift, and go to state 90
    AND                    shift, and go to state 91
    OR                     shift, and go to state 92
    '<'                    shift, and go to state 93
    '>'                    shift, and go to state 94
    '+'                    shift, and go to state 95
    '-'                    shift, and go to state 96

    $default  reduce using rule 100 (argument)


State 206

   90 for_declaration: FOR '(' variable_declaration ';' logical_expression ';' expression ')' .

    $default  reduce using rule 90 (for_declaration)


State 207

   67 block: . '{' block_statements '}'
   94 case_statement: CASE value ':' . block case_statement

    '{'  shift, and go to state 24

    block  go to state 209


State 208

   95 case_statement: DEFAULT ':' block .

    $default  reduce using rule 95 (case_statement)


State 209

   94 case_statement: . CASE value ':' block case_statement
   94               | CASE value ':' block . case_statement
   95               | . DEFAULT ':' block

    CASE     shift, and go to state 192
    DEFAULT  shift, and go to state 193

    case_statement  go to state 210


State 210

   94 case_statement: CASE value ':' block case_statement .

    $default  reduce using rule 94 (case_statement)
